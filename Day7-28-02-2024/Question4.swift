import Foundation// Question 4class Employee {    let name: String    let salary: Int    let technology: String    let block: String        init(name: String, salary: Int, technology: String, block: String) {        self.name = name        self.salary = salary        self.technology = technology        self.block = block    }}class MobileDev: Employee {    override init(name: String, salary: Int, technology: String, block: String) {        super.init(name: name, salary: salary, technology: technology, block: block)    }    func bonusCalculate() {        print("The bonus of \(name) is \((salary * 20)/100)")    }}class FrontDev: Employee {    override init(name: String, salary: Int, technology: String, block: String) {        super.init(name: name, salary: salary, technology: technology, block: block)    }        func bonusCalculate() {        print("The bonus of \(name) is \((salary * 18)/100)")    }}class BackDev: Employee {    override init(name: String, salary: Int, technology: String, block: String) {        super.init(name: name, salary: salary, technology: technology, block: block)    }        func bonusCalculate() {        print("The bonus of \(name) is \((salary * 15)/100)")    }}class QA: Employee {    override init(name: String, salary: Int, technology: String, block: String) {        super.init(name: name, salary: salary, technology: technology, block: block)    }        func bonusCalculate() {        print("The bonus of \(name) is \((salary * 22)/100)")    }}let employees: [Employee] = [    Employee(name: "Karan", salary: 20000, technology: "Mobile Development", block: "A"),     Employee(name: "Aakash", salary: 30000, technology: "Front Development", block: "B"),     Employee(name: "Suman", salary: 30000, technology: "Back Development", block: "C"),     Employee(name: "Maanit", salary: 15000, technology: "QA", block: "D"),    Employee(name: "Kunal", salary: 30000, technology: "Mobile Development", block: "E"),    Employee(name: "Jayesh", salary: 50000, technology: "Back Development", block: "C"),     Employee(name: "Isha", salary: 25000, technology: "QA", block: "A"),]for employee in employees {    if employee.technology == "Mobile Development" {        let mobileObj = MobileDev(            name: employee.name,             salary: employee.salary,             technology: employee.technology,             block: employee.block        )        mobileObj.bonusCalculate()    }    if employee.technology == "Front Development" {        let frontObj = FrontDev(            name: employee.name,             salary: employee.salary,             technology: employee.technology,             block: employee.block        )        frontObj.bonusCalculate()    }    if employee.technology == "Back Development" {        let backObj = BackDev(            name: employee.name,             salary: employee.salary,             technology: employee.technology,             block: employee.block        )        backObj.bonusCalculate()    }    if employee.technology == "QA" {        let qaObj = QA(            name: employee.name,             salary: employee.salary,             technology: employee.technology,             block: employee.block        )        qaObj.bonusCalculate()    }}