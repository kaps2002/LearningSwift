import Foundation//Question 6func factor(_ num: inout Int, _ ans: inout Int) -> Int {    if(num == 1) {        return ans    }    ans *= num    num -= 1    return factor(&num, &ans)}func isprime(_ num: Int) -> Bool {  if (num == 1 || num == 2 || num == 3) {    return true  }  for i in 2...num/2 {    if(num % i == 0) {      return false    }  }  return true}func binaryequivalent(_ num: inout Int) -> String {    var ans: String = ""    while(num != 0) {        ans += String(num%2)        num /= 2    }    return String(ans.reversed())}func hexadecimalequivalent(_ num: inout Int) -> String {    var ans: String = ""    while(num != 0) {        let temp: Int = num%16        if(temp < 10) {            ans += String(temp)        } else if(temp == 10) {            ans += "A"        } else if(temp == 11) {            ans += "B"        } else if(temp == 12) {            ans += "C"        } else if(temp == 13) {            ans += "D"        } else if(temp == 14) {            ans += "E"        } else if(temp == 15) {            ans += "F"        }        num /= 16    }        return String(ans.reversed())}var num: Int = 7let choice: Int = 7switch choice {    case 1:        var ans: Int = 1        print(factor(&num, &ans))    case 2:        print(isprime(num))    case 3:        print(" The Binary Equivalent is \(binaryequivalent(&num))")    case 4:        print(" The Hexa-Decimal equivalent is \(hexadecimalequivalent(&num))")    default:        print("No choice exist")    }